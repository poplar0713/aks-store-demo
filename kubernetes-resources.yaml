apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: makeline-service-6fc9df6887-
    labels:
      app: makeline-service
      pod-template-hash: 6fc9df6887
    name: makeline-service-6fc9df6887-zfr62
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: makeline-service-6fc9df6887
      uid: 523921e4-3046-404a-a262-a35911ef76df
    resourceVersion: "3986"
    uid: 18b59202-cb5f-4fab-9819-4e60e8ab2e44
  spec:
    containers:
    - env:
      - name: ORDER_QUEUE_URI
        value: amqp://rabbitmq:5672
      - name: ORDER_QUEUE_USERNAME
        value: username
      - name: ORDER_QUEUE_PASSWORD
        value: password
      - name: ORDER_QUEUE_NAME
        value: orders
      - name: ORDER_DB_URI
        value: mongodb://mongodb:27017
      - name: ORDER_DB_NAME
        value: orderdb
      - name: ORDER_DB_COLLECTION_NAME
        value: orders
      image: ghcr.io/azure-samples/aks-store-demo/makeline-service:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: makeline-service
      ports:
      - containerPort: 3001
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 5m
          memory: 20Mi
        requests:
          cpu: 1m
          memory: 6Mi
      startupProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cbm9v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-cbm9v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:05:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:05:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://52ebcc971b574a5536ecbb5c95f1197dc045bdbabc7990fa4da8f3ae8b0a8f96
      image: ghcr.io/azure-samples/aks-store-demo/makeline-service:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/makeline-service@sha256:68a5b24c0c2a497104d4d856b3300ed660b5c14908b98e710ad2c86b931b1dd4
      lastState:
        terminated:
          containerID: containerd://07d59ce112d3f89737acb54c4aae863789ccbcd518798602c25482eab0801d6f
          exitCode: 1
          finishedAt: "2024-08-30T01:05:01Z"
          reason: Error
          startedAt: "2024-08-30T01:04:30Z"
      name: makeline-service
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:05:04Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.24
    podIPs:
    - ip: 10.244.0.24
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:23Z"
    generateName: mongodb-
    labels:
      app: mongodb
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: mongodb-67b9cc44bc
      statefulset.kubernetes.io/pod-name: mongodb-0
    name: mongodb-0
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mongodb
      uid: abbd4a7a-091b-4a20-bede-4d6686bee3d3
    resourceVersion: "3737"
    uid: 943c1337-0224-47bc-97ae-4896e1e4ca63
  spec:
    containers:
    - image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - mongosh
          - --eval
          - db.runCommand('ping').ok
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: mongodb
      ports:
      - containerPort: 27017
        name: mongodb
        protocol: TCP
      resources:
        limits:
          cpu: 25m
          memory: 1Gi
        requests:
          cpu: 5m
          memory: 75Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gtzpn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mongodb-0
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-gtzpn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c7d900e0c87301e7875a6b4adbae28e3a035b8697676a00809d62f0132f84a02
      image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
      imageID: mcr.microsoft.com/mirror/docker/library/mongo@sha256:699d652ed67423d689258bad7b316cf005dfbb82b334118ec306f049042f3717
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:26Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.21
    podIPs:
    - ip: 10.244.0.21
    qosClass: Burstable
    startTime: "2024-08-30T01:04:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:23Z"
    generateName: order-service-5f465cb7bb-
    labels:
      app: order-service
      pod-template-hash: 5f465cb7bb
    name: order-service-5f465cb7bb-xtfc2
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: order-service-5f465cb7bb
      uid: 6925f3eb-a2fb-47d6-8ae9-285985b50f93
    resourceVersion: "4043"
    uid: d2628a92-56ca-4ca3-b6f5-ed0be4add789
  spec:
    containers:
    - env:
      - name: ORDER_QUEUE_HOSTNAME
        value: rabbitmq
      - name: ORDER_QUEUE_PORT
        value: "5672"
      - name: ORDER_QUEUE_USERNAME
        value: username
      - name: ORDER_QUEUE_PASSWORD
        value: password
      - name: ORDER_QUEUE_NAME
        value: orders
      - name: FASTIFY_ADDRESS
        value: 0.0.0.0
      image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: order-service
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 1m
          memory: 50Mi
      startupProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cdptj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
      image: busybox
      imagePullPolicy: Always
      name: wait-for-rabbitmq
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 1m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cdptj
        readOnly: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-cdptj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:05:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:05:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://761a40835b23776a3490a78448ff6d7d0d5c4866d304857919128f5be163fc6c
      image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/order-service@sha256:5bf2b90f2a1c380a60ad4b9249b8b85643f34dda895164ea6a3bf3b1667ec0e2
      lastState: {}
      name: order-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:56Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://f1e21b149801c0ca6c780767d30fa16fe7970898f775ec74ef6e5bb585609684
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7
      lastState: {}
      name: wait-for-rabbitmq
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f1e21b149801c0ca6c780767d30fa16fe7970898f775ec74ef6e5bb585609684
          exitCode: 0
          finishedAt: "2024-08-30T01:04:54Z"
          reason: Completed
          startedAt: "2024-08-30T01:04:26Z"
    phase: Running
    podIP: 10.244.0.23
    podIPs:
    - ip: 10.244.0.23
    qosClass: Burstable
    startTime: "2024-08-30T01:04:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: product-service-b7cbc9bd7-
    labels:
      app: product-service
      pod-template-hash: b7cbc9bd7
    name: product-service-b7cbc9bd7-j5zmn
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: product-service-b7cbc9bd7
      uid: f81fa317-a004-426a-8e76-29bd9c49ed43
    resourceVersion: "3808"
    uid: 3bbabcbf-902f-47df-a6e9-93d3f816296b
  spec:
    containers:
    - env:
      - name: AI_SERVICE_URL
        value: http://ai-service:5001/
      image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 3002
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: product-service
      ports:
      - containerPort: 3002
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3002
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 2m
          memory: 10Mi
        requests:
          cpu: 1m
          memory: 1Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vsvmw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-vsvmw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6ae62b48559e7375855da9eedd3c1e9eed0e80cebe42b03cb56d95404d2a56d7
      image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/product-service@sha256:2a633f7d7353e2061becc2191cf97818eb50378343d427ad40064bb0052b673c
      lastState: {}
      name: product-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:31Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.25
    podIPs:
    - ip: 10.244.0.25
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:23Z"
    generateName: rabbitmq-
    labels:
      app: rabbitmq
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: rabbitmq-76886c5866
      statefulset.kubernetes.io/pod-name: rabbitmq-0
    name: rabbitmq-0
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: rabbitmq
      uid: 72360311-d345-45ef-90db-ef0d4c6b119d
    resourceVersion: "3715"
    uid: 96237f0d-a6f7-4037-a5ba-dcf777ef2dc9
  spec:
    containers:
    - env:
      - name: RABBITMQ_DEFAULT_USER
        value: username
      - name: RABBITMQ_DEFAULT_PASS
        value: password
      image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
      imagePullPolicy: IfNotPresent
      name: rabbitmq
      ports:
      - containerPort: 5672
        name: rabbitmq-amqp
        protocol: TCP
      - containerPort: 15672
        name: rabbitmq-http
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/rabbitmq/enabled_plugins
        name: rabbitmq-enabled-plugins
        subPath: enabled_plugins
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fbxsk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: rabbitmq-0
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: rabbitmq
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: rabbitmq_enabled_plugins
          path: enabled_plugins
        name: rabbitmq-enabled-plugins
      name: rabbitmq-enabled-plugins
    - name: kube-api-access-fbxsk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cbdc9a0a59806f556b2bbff25d9faf06320d13acca400a8e95adc4f8e7533dac
      image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
      imageID: mcr.microsoft.com/mirror/docker/library/rabbitmq@sha256:5be2eb71cf151c78e7a622a4f753efa5cdc6f69ff9307054d097725ffb728a82
      lastState: {}
      name: rabbitmq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:24Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.22
    podIPs:
    - ip: 10.244.0.22
    qosClass: Burstable
    startTime: "2024-08-30T01:04:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: store-admin-74df59cbd5-
    labels:
      app: store-admin
      pod-template-hash: 74df59cbd5
    name: store-admin-74df59cbd5-ppthr
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: store-admin-74df59cbd5
      uid: 4f593cc6-dea1-4341-b39a-c91f5193caa5
    resourceVersion: "3826"
    uid: 57332c65-835a-4916-a5f8-55e862db2862
  spec:
    containers:
    - env:
      - name: VUE_APP_PRODUCT_SERVICE_URL
        value: http://product-service:3002/
      - name: VUE_APP_MAKELINE_SERVICE_URL
        value: http://makeline-service:3001/
      image: ghcr.io/azure-samples/aks-store-demo/store-admin:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: store-admin
      ports:
      - containerPort: 8081
        name: store-admin
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 1m
          memory: 200Mi
      startupProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4hp9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-4hp9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://06d33d62962d92b5177d11a7f677cc85af9937fbccb6b4ff027c27bc04f08306
      image: ghcr.io/azure-samples/aks-store-demo/store-admin:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/store-admin@sha256:6dbbca70323082222c9b0d0c82b6d326e24c78f28a1aa5e7ec35d208a0542b51
      lastState: {}
      name: store-admin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:28Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.27
    podIPs:
    - ip: 10.244.0.27
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: store-front-68846476f4-
    labels:
      app: store-front
      pod-template-hash: 68846476f4
    name: store-front-68846476f4-5vcmv
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: store-front-68846476f4
      uid: 6be97c88-53b2-45dd-a2e7-6b4fcbfbeadb
    resourceVersion: "3819"
    uid: 4be6ca26-5b81-4011-aaed-33ba12ccf5d3
  spec:
    containers:
    - env:
      - name: VUE_APP_ORDER_SERVICE_URL
        value: http://order-service:3000/
      - name: VUE_APP_PRODUCT_SERVICE_URL
        value: http://product-service:3002/
      image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      name: store-front
      ports:
      - containerPort: 8080
        name: store-front
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 1m
          memory: 200Mi
      startupProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tp4zs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-tp4zs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://32705e0a3e21fb457b689732f5dc192386f49599e126006cfba1f30d67fd365a
      image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/store-front@sha256:990cc7237e89e492f14095fe40344604fb6ca61a2abd2712b1fda131742a4133
      lastState: {}
      name: store-front
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:27Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.26
    podIPs:
    - ip: 10.244.0.26
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: virtual-customer-6cf9db7795-
    labels:
      app: virtual-customer
      pod-template-hash: 6cf9db7795
    name: virtual-customer-6cf9db7795-v9v6w
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virtual-customer-6cf9db7795
      uid: 953fd813-56df-4246-8904-ad2ac1b120f4
    resourceVersion: "3797"
    uid: b2e943ed-58aa-4b14-ae88-92d2b38f8e85
  spec:
    containers:
    - env:
      - name: ORDER_SERVICE_URL
        value: http://order-service:3000/
      - name: ORDERS_PER_HOUR
        value: "100"
      image: ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest
      imagePullPolicy: Always
      name: virtual-customer
      resources:
        limits:
          cpu: 1m
          memory: 7Mi
        requests:
          cpu: 1m
          memory: 1Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zdc8n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-zdc8n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c7b18f6a803c7a0b72c87616d7c21e0d32cfc4027ab7cb9f2aee378550ec128d
      image: ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/virtual-customer@sha256:a129a2ecd2474fb9ac8b49dceea606e6960f59f69e5ffac69915d397d58c8030
      lastState: {}
      name: virtual-customer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:32Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.28
    podIPs:
    - ip: 10.244.0.28
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-30T01:04:24Z"
    generateName: virtual-worker-7c67d9b7f9-
    labels:
      app: virtual-worker
      pod-template-hash: 7c67d9b7f9
    name: virtual-worker-7c67d9b7f9-7b45k
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: virtual-worker-7c67d9b7f9
      uid: 0bcdc170-e52c-4dd1-8cee-a2ce4ff4c6a4
    resourceVersion: "3805"
    uid: 27e94ca0-7c8e-448a-89a4-b42634cd899f
  spec:
    containers:
    - env:
      - name: MAKELINE_SERVICE_URL
        value: http://makeline-service:3001
      - name: ORDERS_PER_HOUR
        value: "100"
      image: ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest
      imagePullPolicy: Always
      name: virtual-worker
      resources:
        limits:
          cpu: 1m
          memory: 7Mi
        requests:
          cpu: 1m
          memory: 1Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rw5x7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-23306541-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-rw5x7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-08-30T01:04:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://10fdbbf82c54813e3ed2b54f50f7195fe742389fe57ce8dee1547d680874d5f2
      image: ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest
      imageID: ghcr.io/azure-samples/aks-store-demo/virtual-worker@sha256:fc9aa6e1e18d4ae33b2b0f4ce274939cfe72f34323dbcc4db8adae30111ffbee
      lastState: {}
      name: virtual-worker
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-30T01:04:33Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.29
    podIPs:
    - ip: 10.244.0.29
    qosClass: Burstable
    startTime: "2024-08-30T01:04:24Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"makeline-service","namespace":"pets"},"spec":{"ports":[{"name":"http","port":3001,"targetPort":3001}],"selector":{"app":"makeline-service"},"type":"ClusterIP"}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    name: makeline-service
    namespace: pets
    resourceVersion: "3619"
    uid: 3ed67590-7eab-4ba9-970c-7dca0771c220
  spec:
    clusterIP: 10.0.161.106
    clusterIPs:
    - 10.0.161.106
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3001
      protocol: TCP
      targetPort: 3001
    selector:
      app: makeline-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mongodb","namespace":"pets"},"spec":{"ports":[{"port":27017}],"selector":{"app":"mongodb"},"type":"ClusterIP"}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    name: mongodb
    namespace: pets
    resourceVersion: "3566"
    uid: faf3130b-a2cf-4e4d-9d21-8bc04ca92b73
  spec:
    clusterIP: 10.0.32.178
    clusterIPs:
    - 10.0.32.178
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      app: mongodb
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"order-service","namespace":"pets"},"spec":{"ports":[{"name":"http","port":3000,"targetPort":3000}],"selector":{"app":"order-service"},"type":"ClusterIP"}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    name: order-service
    namespace: pets
    resourceVersion: "3604"
    uid: 5db8f3c6-9117-449a-8f0b-21b8f5e8f673
  spec:
    clusterIP: 10.0.251.207
    clusterIPs:
    - 10.0.251.207
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: order-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"product-service","namespace":"pets"},"spec":{"ports":[{"name":"http","port":3002,"targetPort":3002}],"selector":{"app":"product-service"},"type":"ClusterIP"}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    name: product-service
    namespace: pets
    resourceVersion: "3639"
    uid: 16d54ca7-bf63-48cb-a47f-fc119a5f0054
  spec:
    clusterIP: 10.0.159.160
    clusterIPs:
    - 10.0.159.160
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3002
      protocol: TCP
      targetPort: 3002
    selector:
      app: product-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"rabbitmq","namespace":"pets"},"spec":{"ports":[{"name":"rabbitmq-amqp","port":5672,"targetPort":5672},{"name":"rabbitmq-http","port":15672,"targetPort":15672}],"selector":{"app":"rabbitmq"},"type":"ClusterIP"}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    name: rabbitmq
    namespace: pets
    resourceVersion: "3587"
    uid: 43cee221-61af-4195-ad26-0c766c4d524d
  spec:
    clusterIP: 10.0.104.149
    clusterIPs:
    - 10.0.104.149
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: rabbitmq-amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: rabbitmq-http
      port: 15672
      protocol: TCP
      targetPort: 15672
    selector:
      app: rabbitmq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"store-admin","namespace":"pets"},"spec":{"ports":[{"port":80,"targetPort":8081}],"selector":{"app":"store-admin"},"type":"LoadBalancer"}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: store-admin
    namespace: pets
    resourceVersion: "3850"
    uid: 3c080fb7-3139-45da-8889-8884386ca6a0
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.30.98
    clusterIPs:
    - 10.0.30.98
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32069
      port: 80
      protocol: TCP
      targetPort: 8081
    selector:
      app: store-admin
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 20.249.128.187
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"store-front","namespace":"pets"},"spec":{"ports":[{"port":80,"targetPort":8080}],"selector":{"app":"store-front"},"type":"LoadBalancer"}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: store-front
    namespace: pets
    resourceVersion: "3792"
    uid: 1cacd119-4fda-48ed-a464-4e7cc0f3f3ac
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.73.183
    clusterIPs:
    - 10.0.73.183
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30513
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: store-front
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 20.249.128.184
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"makeline-service","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"makeline-service"}},"template":{"metadata":{"labels":{"app":"makeline-service"}},"spec":{"containers":[{"env":[{"name":"ORDER_QUEUE_URI","value":"amqp://rabbitmq:5672"},{"name":"ORDER_QUEUE_USERNAME","value":"username"},{"name":"ORDER_QUEUE_PASSWORD","value":"password"},{"name":"ORDER_QUEUE_NAME","value":"orders"},{"name":"ORDER_DB_URI","value":"mongodb://mongodb:27017"},{"name":"ORDER_DB_NAME","value":"orderdb"},{"name":"ORDER_DB_COLLECTION_NAME","value":"orders"}],"image":"ghcr.io/azure-samples/aks-store-demo/makeline-service:latest","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":3001},"initialDelaySeconds":3,"periodSeconds":3},"name":"makeline-service","ports":[{"containerPort":3001}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":3001},"initialDelaySeconds":3,"periodSeconds":5},"resources":{"limits":{"cpu":"5m","memory":"20Mi"},"requests":{"cpu":"1m","memory":"6Mi"}},"startupProbe":{"failureThreshold":10,"httpGet":{"path":"/health","port":3001},"periodSeconds":5}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: makeline-service
    namespace: pets
    resourceVersion: "3990"
    uid: fdd5331c-0311-4030-aa46-ecc40afcd188
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: makeline-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: makeline-service
      spec:
        containers:
        - env:
          - name: ORDER_QUEUE_URI
            value: amqp://rabbitmq:5672
          - name: ORDER_QUEUE_USERNAME
            value: username
          - name: ORDER_QUEUE_PASSWORD
            value: password
          - name: ORDER_QUEUE_NAME
            value: orders
          - name: ORDER_DB_URI
            value: mongodb://mongodb:27017
          - name: ORDER_DB_NAME
            value: orderdb
          - name: ORDER_DB_COLLECTION_NAME
            value: orders
          image: ghcr.io/azure-samples/aks-store-demo/makeline-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: makeline-service
          ports:
          - containerPort: 3001
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 5m
              memory: 20Mi
            requests:
              cpu: 1m
              memory: 6Mi
          startupProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:05:10Z"
      lastUpdateTime: "2024-08-30T01:05:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:05:10Z"
      message: ReplicaSet "makeline-service-6fc9df6887" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"order-service","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"order-service"}},"template":{"metadata":{"labels":{"app":"order-service"}},"spec":{"containers":[{"env":[{"name":"ORDER_QUEUE_HOSTNAME","value":"rabbitmq"},{"name":"ORDER_QUEUE_PORT","value":"5672"},{"name":"ORDER_QUEUE_USERNAME","value":"username"},{"name":"ORDER_QUEUE_PASSWORD","value":"password"},{"name":"ORDER_QUEUE_NAME","value":"orders"},{"name":"FASTIFY_ADDRESS","value":"0.0.0.0"}],"image":"ghcr.io/azure-samples/aks-store-demo/order-service:latest","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":3000},"initialDelaySeconds":3,"periodSeconds":3},"name":"order-service","ports":[{"containerPort":3000}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":3000},"initialDelaySeconds":3,"periodSeconds":5},"resources":{"limits":{"cpu":"100m","memory":"256Mi"},"requests":{"cpu":"1m","memory":"50Mi"}},"startupProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":3000},"initialDelaySeconds":20,"periodSeconds":10}}],"initContainers":[{"command":["sh","-c","until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;"],"image":"busybox","name":"wait-for-rabbitmq","resources":{"limits":{"cpu":"100m","memory":"256Mi"},"requests":{"cpu":"1m","memory":"50Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    generation: 1
    name: order-service
    namespace: pets
    resourceVersion: "4049"
    uid: ec21d6da-5257-4ec7-9dd4-65029ead9359
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: order-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: order-service
      spec:
        containers:
        - env:
          - name: ORDER_QUEUE_HOSTNAME
            value: rabbitmq
          - name: ORDER_QUEUE_PORT
            value: "5672"
          - name: ORDER_QUEUE_USERNAME
            value: username
          - name: ORDER_QUEUE_PASSWORD
            value: password
          - name: ORDER_QUEUE_NAME
            value: orders
          - name: FASTIFY_ADDRESS
            value: 0.0.0.0
          image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: order-service
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 1m
              memory: 50Mi
          startupProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
          image: busybox
          imagePullPolicy: Always
          name: wait-for-rabbitmq
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 1m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:05:24Z"
      lastUpdateTime: "2024-08-30T01:05:24Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:23Z"
      lastUpdateTime: "2024-08-30T01:05:24Z"
      message: ReplicaSet "order-service-5f465cb7bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"product-service","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"product-service"}},"template":{"metadata":{"labels":{"app":"product-service"}},"spec":{"containers":[{"env":[{"name":"AI_SERVICE_URL","value":"http://ai-service:5001/"}],"image":"ghcr.io/azure-samples/aks-store-demo/product-service:latest","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":3002},"initialDelaySeconds":3,"periodSeconds":3},"name":"product-service","ports":[{"containerPort":3002}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":3002},"initialDelaySeconds":3,"periodSeconds":5},"resources":{"limits":{"cpu":"2m","memory":"10Mi"},"requests":{"cpu":"1m","memory":"1Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: product-service
    namespace: pets
    resourceVersion: "3812"
    uid: 2a64a334-8754-47e3-adab-b8eb7553a203
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: product-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: product-service
      spec:
        containers:
        - env:
          - name: AI_SERVICE_URL
            value: http://ai-service:5001/
          image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3002
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: product-service
          ports:
          - containerPort: 3002
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3002
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2m
              memory: 10Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:04:34Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: ReplicaSet "product-service-b7cbc9bd7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"store-admin","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"store-admin"}},"template":{"metadata":{"labels":{"app":"store-admin"}},"spec":{"containers":[{"env":[{"name":"VUE_APP_PRODUCT_SERVICE_URL","value":"http://product-service:3002/"},{"name":"VUE_APP_MAKELINE_SERVICE_URL","value":"http://makeline-service:3001/"}],"image":"ghcr.io/azure-samples/aks-store-demo/store-admin:latest","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":3,"periodSeconds":3},"name":"store-admin","ports":[{"containerPort":8081,"name":"store-admin"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":3,"periodSeconds":5},"resources":{"limits":{"cpu":"1000m","memory":"512Mi"},"requests":{"cpu":"1m","memory":"200Mi"}},"startupProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":5,"periodSeconds":5}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: store-admin
    namespace: pets
    resourceVersion: "3830"
    uid: f72a3bc4-5d93-4d41-a196-a48c9056657f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: store-admin
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: store-admin
      spec:
        containers:
        - env:
          - name: VUE_APP_PRODUCT_SERVICE_URL
            value: http://product-service:3002/
          - name: VUE_APP_MAKELINE_SERVICE_URL
            value: http://makeline-service:3001/
          image: ghcr.io/azure-samples/aks-store-demo/store-admin:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: store-admin
          ports:
          - containerPort: 8081
            name: store-admin
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 1m
              memory: 200Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:04:34Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: ReplicaSet "store-admin-74df59cbd5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"store-front","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"store-front"}},"template":{"metadata":{"labels":{"app":"store-front"}},"spec":{"containers":[{"env":[{"name":"VUE_APP_ORDER_SERVICE_URL","value":"http://order-service:3000/"},{"name":"VUE_APP_PRODUCT_SERVICE_URL","value":"http://product-service:3002/"}],"image":"ghcr.io/azure-samples/aks-store-demo/store-front:latest","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"periodSeconds":3},"name":"store-front","ports":[{"containerPort":8080,"name":"store-front"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"periodSeconds":3},"resources":{"limits":{"cpu":"1000m","memory":"512Mi"},"requests":{"cpu":"1m","memory":"200Mi"}},"startupProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":5}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: store-front
    namespace: pets
    resourceVersion: "3823"
    uid: f282f72d-6f18-45f7-a6c8-51a7e7be0740
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: store-front
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: store-front
      spec:
        containers:
        - env:
          - name: VUE_APP_ORDER_SERVICE_URL
            value: http://order-service:3000/
          - name: VUE_APP_PRODUCT_SERVICE_URL
            value: http://product-service:3002/
          image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: store-front
          ports:
          - containerPort: 8080
            name: store-front
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 1m
              memory: 200Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:04:34Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: ReplicaSet "store-front-68846476f4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"virtual-customer","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"virtual-customer"}},"template":{"metadata":{"labels":{"app":"virtual-customer"}},"spec":{"containers":[{"env":[{"name":"ORDER_SERVICE_URL","value":"http://order-service:3000/"},{"name":"ORDERS_PER_HOUR","value":"100"}],"image":"ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest","name":"virtual-customer","resources":{"limits":{"cpu":"1m","memory":"7Mi"},"requests":{"cpu":"1m","memory":"1Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: virtual-customer
    namespace: pets
    resourceVersion: "3799"
    uid: 8f1ce050-df76-4f97-a1e9-5b5d6b9a540d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: virtual-customer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: virtual-customer
      spec:
        containers:
        - env:
          - name: ORDER_SERVICE_URL
            value: http://order-service:3000/
          - name: ORDERS_PER_HOUR
            value: "100"
          image: ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest
          imagePullPolicy: Always
          name: virtual-customer
          resources:
            limits:
              cpu: 1m
              memory: 7Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:04:33Z"
      lastUpdateTime: "2024-08-30T01:04:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:04:33Z"
      message: ReplicaSet "virtual-customer-6cf9db7795" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"virtual-worker","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"virtual-worker"}},"template":{"metadata":{"labels":{"app":"virtual-worker"}},"spec":{"containers":[{"env":[{"name":"MAKELINE_SERVICE_URL","value":"http://makeline-service:3001"},{"name":"ORDERS_PER_HOUR","value":"100"}],"image":"ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest","name":"virtual-worker","resources":{"limits":{"cpu":"1m","memory":"7Mi"},"requests":{"cpu":"1m","memory":"1Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    name: virtual-worker
    namespace: pets
    resourceVersion: "3807"
    uid: 805cf245-d195-466f-8a9b-3568cb486553
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: virtual-worker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: virtual-worker
      spec:
        containers:
        - env:
          - name: MAKELINE_SERVICE_URL
            value: http://makeline-service:3001
          - name: ORDERS_PER_HOUR
            value: "100"
          image: ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest
          imagePullPolicy: Always
          name: virtual-worker
          resources:
            limits:
              cpu: 1m
              memory: 7Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-08-30T01:04:34Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-08-30T01:04:24Z"
      lastUpdateTime: "2024-08-30T01:04:34Z"
      message: ReplicaSet "virtual-worker-7c67d9b7f9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: makeline-service
      pod-template-hash: 6fc9df6887
    name: makeline-service-6fc9df6887
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: makeline-service
      uid: fdd5331c-0311-4030-aa46-ecc40afcd188
    resourceVersion: "3989"
    uid: 523921e4-3046-404a-a262-a35911ef76df
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: makeline-service
        pod-template-hash: 6fc9df6887
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: makeline-service
          pod-template-hash: 6fc9df6887
      spec:
        containers:
        - env:
          - name: ORDER_QUEUE_URI
            value: amqp://rabbitmq:5672
          - name: ORDER_QUEUE_USERNAME
            value: username
          - name: ORDER_QUEUE_PASSWORD
            value: password
          - name: ORDER_QUEUE_NAME
            value: orders
          - name: ORDER_DB_URI
            value: mongodb://mongodb:27017
          - name: ORDER_DB_NAME
            value: orderdb
          - name: ORDER_DB_COLLECTION_NAME
            value: orders
          image: ghcr.io/azure-samples/aks-store-demo/makeline-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: makeline-service
          ports:
          - containerPort: 3001
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 5m
              memory: 20Mi
            requests:
              cpu: 1m
              memory: 6Mi
          startupProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 3001
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:23Z"
    generation: 1
    labels:
      app: order-service
      pod-template-hash: 5f465cb7bb
    name: order-service-5f465cb7bb
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: order-service
      uid: ec21d6da-5257-4ec7-9dd4-65029ead9359
    resourceVersion: "4047"
    uid: 6925f3eb-a2fb-47d6-8ae9-285985b50f93
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: order-service
        pod-template-hash: 5f465cb7bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: order-service
          pod-template-hash: 5f465cb7bb
      spec:
        containers:
        - env:
          - name: ORDER_QUEUE_HOSTNAME
            value: rabbitmq
          - name: ORDER_QUEUE_PORT
            value: "5672"
          - name: ORDER_QUEUE_USERNAME
            value: username
          - name: ORDER_QUEUE_PASSWORD
            value: password
          - name: ORDER_QUEUE_NAME
            value: orders
          - name: FASTIFY_ADDRESS
            value: 0.0.0.0
          image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: order-service
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 1m
              memory: 50Mi
          startupProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
          image: busybox
          imagePullPolicy: Always
          name: wait-for-rabbitmq
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 1m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: product-service
      pod-template-hash: b7cbc9bd7
    name: product-service-b7cbc9bd7
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: product-service
      uid: 2a64a334-8754-47e3-adab-b8eb7553a203
    resourceVersion: "3811"
    uid: f81fa317-a004-426a-8e76-29bd9c49ed43
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: product-service
        pod-template-hash: b7cbc9bd7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: product-service
          pod-template-hash: b7cbc9bd7
      spec:
        containers:
        - env:
          - name: AI_SERVICE_URL
            value: http://ai-service:5001/
          image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 3002
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: product-service
          ports:
          - containerPort: 3002
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3002
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2m
              memory: 10Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: store-admin
      pod-template-hash: 74df59cbd5
    name: store-admin-74df59cbd5
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: store-admin
      uid: f72a3bc4-5d93-4d41-a196-a48c9056657f
    resourceVersion: "3829"
    uid: 4f593cc6-dea1-4341-b39a-c91f5193caa5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: store-admin
        pod-template-hash: 74df59cbd5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: store-admin
          pod-template-hash: 74df59cbd5
      spec:
        containers:
        - env:
          - name: VUE_APP_PRODUCT_SERVICE_URL
            value: http://product-service:3002/
          - name: VUE_APP_MAKELINE_SERVICE_URL
            value: http://makeline-service:3001/
          image: ghcr.io/azure-samples/aks-store-demo/store-admin:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: store-admin
          ports:
          - containerPort: 8081
            name: store-admin
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 1m
              memory: 200Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: store-front
      pod-template-hash: 68846476f4
    name: store-front-68846476f4
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: store-front
      uid: f282f72d-6f18-45f7-a6c8-51a7e7be0740
    resourceVersion: "3822"
    uid: 6be97c88-53b2-45dd-a2e7-6b4fcbfbeadb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: store-front
        pod-template-hash: 68846476f4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: store-front
          pod-template-hash: 68846476f4
      spec:
        containers:
        - env:
          - name: VUE_APP_ORDER_SERVICE_URL
            value: http://order-service:3000/
          - name: VUE_APP_PRODUCT_SERVICE_URL
            value: http://product-service:3002/
          image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          name: store-front
          ports:
          - containerPort: 8080
            name: store-front
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 1m
              memory: 200Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: virtual-customer
      pod-template-hash: 6cf9db7795
    name: virtual-customer-6cf9db7795
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: virtual-customer
      uid: 8f1ce050-df76-4f97-a1e9-5b5d6b9a540d
    resourceVersion: "3798"
    uid: 953fd813-56df-4246-8904-ad2ac1b120f4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: virtual-customer
        pod-template-hash: 6cf9db7795
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: virtual-customer
          pod-template-hash: 6cf9db7795
      spec:
        containers:
        - env:
          - name: ORDER_SERVICE_URL
            value: http://order-service:3000/
          - name: ORDERS_PER_HOUR
            value: "100"
          image: ghcr.io/azure-samples/aks-store-demo/virtual-customer:latest
          imagePullPolicy: Always
          name: virtual-customer
          resources:
            limits:
              cpu: 1m
              memory: 7Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-08-30T01:04:24Z"
    generation: 1
    labels:
      app: virtual-worker
      pod-template-hash: 7c67d9b7f9
    name: virtual-worker-7c67d9b7f9
    namespace: pets
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: virtual-worker
      uid: 805cf245-d195-466f-8a9b-3568cb486553
    resourceVersion: "3806"
    uid: 0bcdc170-e52c-4dd1-8cee-a2ce4ff4c6a4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: virtual-worker
        pod-template-hash: 7c67d9b7f9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: virtual-worker
          pod-template-hash: 7c67d9b7f9
      spec:
        containers:
        - env:
          - name: MAKELINE_SERVICE_URL
            value: http://makeline-service:3001
          - name: ORDERS_PER_HOUR
            value: "100"
          image: ghcr.io/azure-samples/aks-store-demo/virtual-worker:latest
          imagePullPolicy: Always
          name: virtual-worker
          resources:
            limits:
              cpu: 1m
              memory: 7Mi
            requests:
              cpu: 1m
              memory: 1Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"mongodb","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mongodb"}},"serviceName":"mongodb","template":{"metadata":{"labels":{"app":"mongodb"}},"spec":{"containers":[{"image":"mcr.microsoft.com/mirror/docker/library/mongo:4.2","livenessProbe":{"exec":{"command":["mongosh","--eval","db.runCommand('ping').ok"]},"initialDelaySeconds":5,"periodSeconds":5},"name":"mongodb","ports":[{"containerPort":27017,"name":"mongodb"}],"resources":{"limits":{"cpu":"25m","memory":"1024Mi"},"requests":{"cpu":"5m","memory":"75Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}}}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    generation: 1
    name: mongodb
    namespace: pets
    resourceVersion: "3740"
    uid: abbd4a7a-091b-4a20-bede-4d6686bee3d3
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mongodb
    serviceName: mongodb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mongodb
      spec:
        containers:
        - image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - mongosh
              - --eval
              - db.runCommand('ping').ok
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            name: mongodb
            protocol: TCP
          resources:
            limits:
              cpu: 25m
              memory: 1Gi
            requests:
              cpu: 5m
              memory: 75Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: mongodb-67b9cc44bc
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: mongodb-67b9cc44bc
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"rabbitmq","namespace":"pets"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"rabbitmq"}},"serviceName":"rabbitmq","template":{"metadata":{"labels":{"app":"rabbitmq"}},"spec":{"containers":[{"env":[{"name":"RABBITMQ_DEFAULT_USER","value":"username"},{"name":"RABBITMQ_DEFAULT_PASS","value":"password"}],"image":"mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine","name":"rabbitmq","ports":[{"containerPort":5672,"name":"rabbitmq-amqp"},{"containerPort":15672,"name":"rabbitmq-http"}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"},"requests":{"cpu":"10m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/etc/rabbitmq/enabled_plugins","name":"rabbitmq-enabled-plugins","subPath":"enabled_plugins"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"volumes":[{"configMap":{"items":[{"key":"rabbitmq_enabled_plugins","path":"enabled_plugins"}],"name":"rabbitmq-enabled-plugins"},"name":"rabbitmq-enabled-plugins"}]}}}}
    creationTimestamp: "2024-08-30T01:04:23Z"
    generation: 1
    name: rabbitmq
    namespace: pets
    resourceVersion: "3718"
    uid: 72360311-d345-45ef-90db-ef0d4c6b119d
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: rabbitmq
    serviceName: rabbitmq
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: rabbitmq
      spec:
        containers:
        - env:
          - name: RABBITMQ_DEFAULT_USER
            value: username
          - name: RABBITMQ_DEFAULT_PASS
            value: password
          image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            name: rabbitmq-amqp
            protocol: TCP
          - containerPort: 15672
            name: rabbitmq-http
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/rabbitmq/enabled_plugins
            name: rabbitmq-enabled-plugins
            subPath: enabled_plugins
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: rabbitmq_enabled_plugins
              path: enabled_plugins
            name: rabbitmq-enabled-plugins
          name: rabbitmq-enabled-plugins
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: rabbitmq-76886c5866
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: rabbitmq-76886c5866
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
